Index: src/test/org/hibernate/ejb/test/emops/FlushTest.java
===================================================================
--- src/test/org/hibernate/ejb/test/emops/FlushTest.java	(revision 15256)
+++ src/test/org/hibernate/ejb/test/emops/FlushTest.java	(working copy)
@@ -29,42 +29,50 @@
 		EntityManager manager = factory.createEntityManager( );
 
 		manager.getTransaction().begin();
-		Pet p1 = createCat("Toonses", 15.0, 9, manager);
-		manager.flush();
-		manager.clear();
+		try {
+			Pet p1 = createCat("Toonses", 15.0, 9, manager);
+			manager.flush();
+			manager.clear();
 
-		Pet p2 = createCat("Sox", 10.0, 5, manager);
-		manager.flush();
-		manager.clear();
+			Pet p2 = createCat("Sox", 10.0, 5, manager);
+			manager.flush();
+			manager.clear();
 
-		Pet p3 = createDog("Winnie", 70.0, 5, manager);
-		manager.flush();
-		manager.clear();
+			Pet p3 = createDog("Winnie", 70.0, 5, manager);
+			manager.flush();
+			manager.clear();
 
-		Pet p4 = createDog("Junior", 11.0, 1, manager);
-		manager.flush();
-		manager.clear();
+			Pet p4 = createDog("Junior", 11.0, 1, manager);
+			manager.flush();
+			manager.clear();
 
-		Decorate d1 = createDecorate("Test", p1, manager);
-		manager.flush();
-		manager.clear();
+			Decorate d1 = createDecorate("Test", p1, manager);
+			manager.flush();
+			manager.clear();
 
-		Decorate d2 = createDecorate("Test2", p2, manager);
-		manager.flush();
-		manager.clear();
+			Decorate d2 = createDecorate("Test2", p2, manager);
+			manager.flush();
+			manager.clear();
 
-		List l = findByWeight(14.0, manager);
-		manager.flush();
-		manager.clear();
-		for (Object o : l) {
-			assertTrue( names.contains( ( (Pet) o).getName() ) );
-		}
+			List l = findByWeight(14.0, manager);
+			manager.flush();
+			manager.clear();
+			for (Object o : l) {
+				assertTrue( names.contains( ( (Pet) o).getName() ) );
+			}
 
-		Collection<Decorate> founds = getDecorate(manager);
-		manager.flush();
-		manager.clear();
-		for (Decorate value : founds) {
-			assertTrue( names.contains( value.getPet().getName() ) );
+			Collection<Decorate> founds = getDecorate(manager);
+			manager.flush();
+			manager.clear();
+			for (Decorate value : founds) {
+				assertTrue( names.contains( value.getPet().getName() ) );
+			}
+			manager.getTransaction().commit();
+		} catch (Exception e) {
+			manager.getTransaction().rollback();
+			throw e;
+		} finally {
+			manager.close();
 		}
 		
 	}
