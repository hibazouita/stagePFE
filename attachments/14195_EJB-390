Index: src/test/org/hibernate/ejb/test/cascade/FetchTest.java
===================================================================
--- src/test/org/hibernate/ejb/test/cascade/FetchTest.java	(revision 15256)
+++ src/test/org/hibernate/ejb/test/cascade/FetchTest.java	(working copy)
@@ -20,57 +20,95 @@
 		EntityManager em = factory.createEntityManager();
 		em.getTransaction().begin();
 		Troop disney = new Troop();
-		disney.setName( "Disney" );
 		Soldier mickey = new Soldier();
-		mickey.setName( "Mickey" );
-		disney.addSoldier( mickey );
-		em.persist( disney );
-		em.getTransaction().commit();
-		em.close();
+		try {
+			disney.setName( "Disney" );
+			mickey.setName( "Mickey" );
+			disney.addSoldier( mickey );
+			em.persist( disney );
+			em.getTransaction().commit();
+		} catch (Exception e) {
+			em.getTransaction().rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
 
 		em = factory.createEntityManager();
 		em.getTransaction().begin();
-		Troop troop = em.find( Troop.class, disney.getId() );
-		assertFalse( Hibernate.isInitialized( troop.getSoldiers() ) );
-		em.getTransaction().commit();
-		assertFalse( Hibernate.isInitialized( troop.getSoldiers() ) );
-		em.close();
+		Troop troop = null;
+		try {
+			troop = em.find( Troop.class, disney.getId() );
+			assertFalse( Hibernate.isInitialized( troop.getSoldiers() ) );
+			em.getTransaction().commit();
+			assertFalse( Hibernate.isInitialized( troop.getSoldiers() ) );
+		} catch (Exception e) {
+			em.getTransaction().rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
 
 		em = factory.createEntityManager();
 		em.getTransaction().begin();
-		troop = em.find( Troop.class, disney.getId() );
-		em.remove( troop );
-		//Fail because of HHH-1187
-		em.getTransaction().commit();
-		em.close();
+		try {
+			troop = em.find( Troop.class, disney.getId() );
+			em.remove( troop );
+			//Fail because of HHH-1187
+			em.getTransaction().commit();
+		} catch (Exception e) {
+			em.getTransaction().rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
 	}
 
 	public void testCascadeAndFetchEntity() throws Exception {
 		EntityManager em = factory.createEntityManager();
 		em.getTransaction().begin();
 		Troop disney = new Troop();
-		disney.setName( "Disney" );
 		Soldier mickey = new Soldier();
-		mickey.setName( "Mickey" );
-		disney.addSoldier( mickey );
-		em.persist( disney );
-		em.getTransaction().commit();
-		em.close();
+		try {
+			disney.setName( "Disney" );
+			mickey.setName( "Mickey" );
+			disney.addSoldier( mickey );
+			em.persist( disney );
+			em.getTransaction().commit();
+		} catch (Exception e) {
+			em.getTransaction().rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
 
 		em = factory.createEntityManager();
 		em.getTransaction().begin();
-		Soldier soldier = em.find( Soldier.class, mickey.getId() );
-		assertFalse( Hibernate.isInitialized( soldier.getTroop() ) );
-		em.getTransaction().commit();
-		assertFalse( Hibernate.isInitialized( soldier.getTroop() ) );
-		em.close();
+		try {
+			Soldier soldier = em.find( Soldier.class, mickey.getId() );
+			assertFalse( Hibernate.isInitialized( soldier.getTroop() ) );
+			em.getTransaction().commit();
+			assertFalse( Hibernate.isInitialized( soldier.getTroop() ) );
+		} catch (Exception e) {
+			em.getTransaction().rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
+		
 		em = factory.createEntityManager();
 		em.getTransaction().begin();
-		Troop troop = em.find( Troop.class, disney.getId() );
-		em.remove( troop );
-		//Fail because of HHH-1187
-		em.getTransaction().commit();
-		em.close();
+		try {
+			Troop troop = em.find( Troop.class, disney.getId() );
+			em.remove( troop );
+			//Fail because of HHH-1187
+			em.getTransaction().commit();
+		} catch (Exception e) {
+			em.getTransaction().rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
 	}
 
 	public void testTwoLevelDeepPersist() throws Exception {
@@ -80,34 +118,46 @@
 		tx = em.getTransaction();
 		tx.begin();
 		Conference jbwBarcelona = new Conference();
-		jbwBarcelona.setDate( new Date() );
-		ExtractionDocumentInfo info = new ExtractionDocumentInfo();
-		info.setConference( jbwBarcelona );
-		jbwBarcelona.setExtractionDocument( info );
-		info.setLastModified( new Date() );
-		ExtractionDocument doc = new ExtractionDocument();
-		doc.setDocumentInfo( info );
-		info.setDocuments( new ArrayList<ExtractionDocument>() );
-		info.getDocuments().add( doc );
-		doc.setBody( new byte[]{'c', 'f'} );
-		em.persist( jbwBarcelona );
-		tx.commit();
-		em.close();
+		try {
+			jbwBarcelona.setDate( new Date() );
+			ExtractionDocumentInfo info = new ExtractionDocumentInfo();
+			info.setConference( jbwBarcelona );
+			jbwBarcelona.setExtractionDocument( info );
+			info.setLastModified( new Date() );
+			ExtractionDocument doc = new ExtractionDocument();
+			doc.setDocumentInfo( info );
+			info.setDocuments( new ArrayList<ExtractionDocument>() );
+			info.getDocuments().add( doc );
+			doc.setBody( new byte[]{'c', 'f'} );
+			em.persist( jbwBarcelona );
+			tx.commit();
+		} catch (Exception e) {
+			tx.rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
 
 		em = factory.createEntityManager();
 		tx = em.getTransaction();
 		tx.begin();
-		jbwBarcelona = em.find( Conference.class, jbwBarcelona.getId() );
-		assertTrue( Hibernate.isInitialized( jbwBarcelona ) );
-		assertTrue( Hibernate.isInitialized( jbwBarcelona.getExtractionDocument() ) );
-		assertFalse( Hibernate.isInitialized( jbwBarcelona.getExtractionDocument().getDocuments() ) );
-		em.flush();
-		assertTrue( Hibernate.isInitialized( jbwBarcelona ) );
-		assertTrue( Hibernate.isInitialized( jbwBarcelona.getExtractionDocument() ) );
-		assertFalse( Hibernate.isInitialized( jbwBarcelona.getExtractionDocument().getDocuments() ) );
-		em.remove( jbwBarcelona );
-		tx.commit();
-		em.close();
+		try {
+			jbwBarcelona = em.find( Conference.class, jbwBarcelona.getId() );
+			assertTrue( Hibernate.isInitialized( jbwBarcelona ) );
+			assertTrue( Hibernate.isInitialized( jbwBarcelona.getExtractionDocument() ) );
+			assertFalse( Hibernate.isInitialized( jbwBarcelona.getExtractionDocument().getDocuments() ) );
+			em.flush();
+			assertTrue( Hibernate.isInitialized( jbwBarcelona ) );
+			assertTrue( Hibernate.isInitialized( jbwBarcelona.getExtractionDocument() ) );
+			assertFalse( Hibernate.isInitialized( jbwBarcelona.getExtractionDocument().getDocuments() ) );
+			em.remove( jbwBarcelona );
+			tx.commit();
+		} catch (Exception e) {
+			tx.rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
 	}
 
 	public void testTwoLevelDeepPersistOnManyToOne() throws Exception {
@@ -116,88 +166,127 @@
 		tx = em.getTransaction();
 		tx.begin();
 		Grandson gs = new Grandson();
-		gs.setParent( new Son() );
-		gs.getParent().setParent( new Parent() );
-		em.persist( gs );
-		tx.commit();
-		em.close();
+		try {
+			gs.setParent( new Son() );
+			gs.getParent().setParent( new Parent() );
+			em.persist( gs );
+			tx.commit();
+		} catch (Exception e) {
+			tx.rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
+
 		em = factory.createEntityManager();
 		tx = em.getTransaction();
 		tx.begin();
-		gs = em.find( Grandson.class, gs.getId() );
-		em.flush();
-		assertTrue( Hibernate.isInitialized( gs.getParent() ) );
-		assertFalse( Hibernate.isInitialized( gs.getParent().getParent() ) );
-		em.remove( gs );
-		tx.commit();
-		em.close();
+		try {
+			gs = em.find( Grandson.class, gs.getId() );
+			em.flush();
+			assertTrue( Hibernate.isInitialized( gs.getParent() ) );
+			assertFalse( Hibernate.isInitialized( gs.getParent().getParent() ) );
+			em.remove( gs );
+			tx.commit();
+		} catch (Exception e) {
+			tx.rollback();
+			throw e;
+		} finally {
+			em.close();
+		}
 	}
 
 	public void testPerfCascadeAndFetchEntity() throws Exception {
 		EntityManager em = factory.createEntityManager();
+		long l11,l2;
+		Query query;
 		//init data
 		em.getTransaction().begin();
 		int loop = 50;
-		for ( int i = 0; i < loop ; i++ ) {
-			Troop disney = new Troop();
-			disney.setName( "Disney" );
-			Soldier mickey = new Soldier();
-			mickey.setName( "Mickey" );
-			disney.addSoldier( mickey );
-			em.persist( disney );
+		try {
+			for ( int i = 0; i < loop ; i++ ) {
+				Troop disney = new Troop();
+				disney.setName( "Disney" );
+				Soldier mickey = new Soldier();
+				mickey.setName( "Mickey" );
+				disney.addSoldier( mickey );
+				em.persist( disney );
+			}
+			em.getTransaction().commit();
+		} catch (Exception e) {
+			em.getTransaction().rollback();
+			throw e;
+		} finally {
+			em.close();
 		}
-		em.getTransaction().commit();
-		em.close();
 
 		//Warm up loop
 		em = factory.createEntityManager();
 		em.getTransaction().begin();
-		for ( int i = 0; i < loop ; i++ ) {
-			//Soldier soldier = em.find( Soldier.class, new Integer(i) );
-			Troop troop = em.find( Troop.class, new Integer( i ) );
-			//( ( HibernateEntityManager ) em ).getSession().evict(soldier);
-		}
-		long l11 = System.currentTimeMillis();
-		Query query = em.createQuery( "SELECT count(t) FROM Soldier t" );
-		query.getSingleResult();
-		long l2 = System.currentTimeMillis();
-		System.out.println( "Query1 " + ( l2 - l11 ) );
-		em.getTransaction().commit();
-		em.close();
-
-		//do not evict
-		for ( int j = 0; j < 10 ; j++ ) {
-			em = factory.createEntityManager();
-			em.getTransaction().begin();
+		try {
 			for ( int i = 0; i < loop ; i++ ) {
+				//Soldier soldier = em.find( Soldier.class, new Integer(i) );
 				Troop troop = em.find( Troop.class, new Integer( i ) );
-				( (HibernateEntityManager) em ).getSession().evict( troop );
+				//( ( HibernateEntityManager ) em ).getSession().evict(soldier);
 			}
 			l11 = System.currentTimeMillis();
 			query = em.createQuery( "SELECT count(t) FROM Soldier t" );
 			query.getSingleResult();
 			l2 = System.currentTimeMillis();
-			System.out.println( "Query " + ( l2 - l11 ) );
+			System.out.println( "Query1 " + ( l2 - l11 ) );
 			em.getTransaction().commit();
+		} catch (Exception e) {
+			em.getTransaction().rollback();
+			throw e;
+		} finally {
 			em.close();
+		}
 
+		//do not evict
+		for ( int j = 0; j < 10 ; j++ ) {
+			em = factory.createEntityManager();
+			em.getTransaction().begin();
+			try {
+				for ( int i = 0; i < loop ; i++ ) {
+					Troop troop = em.find( Troop.class, new Integer( i ) );
+					( (HibernateEntityManager) em ).getSession().evict( troop );
+				}
+				l11 = System.currentTimeMillis();
+				query = em.createQuery( "SELECT count(t) FROM Soldier t" );
+				query.getSingleResult();
+				l2 = System.currentTimeMillis();
+				System.out.println( "Query " + ( l2 - l11 ) );
+				em.getTransaction().commit();
+			} catch (Exception e) {
+				em.getTransaction().rollback();
+				throw e;
+			} finally {
+				em.close();
+			}
+
 			//evict
 			em = factory.createEntityManager();
 			em.getTransaction().begin();
-			for ( int i = 0; i < loop ; i++ ) {
-				//Soldier soldier = em.find( Soldier.class, new Integer(i) );
-				Troop troop = em.find( Troop.class, new Integer( i ) );
+			try {
+				for ( int i = 0; i < loop ; i++ ) {
+					//Soldier soldier = em.find( Soldier.class, new Integer(i) );
+					Troop troop = em.find( Troop.class, new Integer( i ) );
 
-				//( ( HibernateEntityManager ) em ).getSession().evict(troop);
+					//( ( HibernateEntityManager ) em ).getSession().evict(troop);
+				}
+				l11 = System.currentTimeMillis();
+				query = em.createQuery( "SELECT count(t) FROM Soldier t" );
+				query.getSingleResult();
+				l2 = System.currentTimeMillis();
+				System.out.println( "Query " + ( l2 - l11 ) );
+				em.getTransaction().commit();
+			} catch (Exception e) {
+				em.getTransaction().rollback();
+				throw e;
+			} finally {
+				em.close();
 			}
-			l11 = System.currentTimeMillis();
-			query = em.createQuery( "SELECT count(t) FROM Soldier t" );
-			query.getSingleResult();
-			l2 = System.currentTimeMillis();
-			System.out.println( "Query " + ( l2 - l11 ) );
-			em.getTransaction().commit();
 		}
-		em.close();
 	}
 
 
